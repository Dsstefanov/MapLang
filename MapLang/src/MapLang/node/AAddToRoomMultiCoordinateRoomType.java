/* This file was generated by SableCC (http://www.sablecc.org/). */

package MapLang.node;

import MapLang.analysis.*;

@SuppressWarnings("nls")
public final class AAddToRoomMultiCoordinateRoomType extends PRoomType
{
    private PAstMultiCoordinate _astMultiCoordinate_;

    public AAddToRoomMultiCoordinateRoomType()
    {
        // Constructor
    }

    public AAddToRoomMultiCoordinateRoomType(
        @SuppressWarnings("hiding") PAstMultiCoordinate _astMultiCoordinate_)
    {
        // Constructor
        setAstMultiCoordinate(_astMultiCoordinate_);

    }

    @Override
    public Object clone()
    {
        return new AAddToRoomMultiCoordinateRoomType(
            cloneNode(this._astMultiCoordinate_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAddToRoomMultiCoordinateRoomType(this);
    }

    public PAstMultiCoordinate getAstMultiCoordinate()
    {
        return this._astMultiCoordinate_;
    }

    public void setAstMultiCoordinate(PAstMultiCoordinate node)
    {
        if(this._astMultiCoordinate_ != null)
        {
            this._astMultiCoordinate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._astMultiCoordinate_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._astMultiCoordinate_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._astMultiCoordinate_ == child)
        {
            this._astMultiCoordinate_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._astMultiCoordinate_ == oldChild)
        {
            setAstMultiCoordinate((PAstMultiCoordinate) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
