/* This file was generated by SableCC (http://www.sablecc.org/). */

package MapLang.analysis;

import java.util.*;
import MapLang.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInitProgramStart(AInitProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateMapProgramStart(ACreateMapProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreatePointProgramStart(ACreatePointProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateTemplateProgramStart(ACreateTemplateProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateRoomProgramStart(ACreateRoomProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateRectangleOneProgramStart(ACreateRectangleOneProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateRectangleTwoProgramStart(ACreateRectangleTwoProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateCircleProgramStart(ACreateCircleProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateLineProgramStart(ACreateLineProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACopyPProgramStart(ACopyPProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACopyTProgramStart(ACopyTProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACopySProgramStart(ACopySProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddToRoomProgramStart(AAddToRoomProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddToShapeProgramStart(AAddToShapeProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddToTemplateProgramStart(AAddToTemplateProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddDoorwayPositionProgramStart(AAddDoorwayPositionProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddWindowPositionProgramStart(AAddWindowPositionProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddExitPositionProgramStart(AAddExitPositionProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramStart(AProgramStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateMap(ACreateMap node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreatePointCreatePoint(ACreatePointCreatePoint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreatePointExtendedCreatePoint(ACreatePointExtendedCreatePoint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACreateTemplate(ACreateTemplate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACopyPoints(ACopyPoints node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACopyTemplate(ACopyTemplate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACopyShapes(ACopyShapes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelationExplicitAstRelation(ARelationExplicitAstRelation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelationCoordinateAstRelation(ARelationCoordinateAstRelation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAERelationAstNullableRelation(AERelationAstNullableRelation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAERelationExplicitAstNullableRelation(AERelationExplicitAstNullableRelation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAERelationCoordinateAstNullableRelation(AERelationCoordinateAstNullableRelation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstRelationExplicit(AAstRelationExplicit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeftDirAstDir(ALeftDirAstDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARightDirAstDir(ARightDirAstDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUpDirAstDir(AUpDirAstDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADownDirAstDir(ADownDirAstDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStartAstDis(AStartAstDis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANearStartAstDis(ANearStartAstDis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHalfwayAstDis(AHalfwayAstDis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANearEndAstDis(ANearEndAstDis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEndAstDis(AEndAstDis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADistanceAstPosition(ADistanceAstPosition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACoordinateAstPosition(ACoordinateAstPosition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstPreciseDir(AAstPreciseDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstSecondPreciseDir(AAstSecondPreciseDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstMultiId(AAstMultiId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstMultiCoordinate(AAstMultiCoordinate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddPointsToShapeTypeList(AAddPointsToShapeTypeList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddShapesToShapeTypeList(AAddShapesToShapeTypeList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddTemplateToShapeTypeList(AAddTemplateToShapeTypeList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddCoordinateToShapeTypeList(AAddCoordinateToShapeTypeList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddToRoomPointsRoomType(AAddToRoomPointsRoomType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddToRoomShapesRoomType(AAddToRoomShapesRoomType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddToRoomIdRoomType(AAddToRoomIdRoomType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddToRoomMultiCoordinateRoomType(AAddToRoomMultiCoordinateRoomType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAstCoordinate(AAstCoordinate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEol(TEol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSlash(TSlash node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLParen(TLParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRParen(TRParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCreate(TCreate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMap(TMap node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPoint(TPoint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFrom(TFrom node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTo(TTo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAt(TAt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBy(TBy node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRight(TRight node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeft(TLeft node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUp(TUp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDown(TDown node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCopy(TCopy node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAdd(TAdd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRoom(TRoom node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTemplate(TTemplate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTemplates(TTemplates node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTShape(TShape node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLine(TLine node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCoordinates(TCoordinates node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIn(TIn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloor(TFloor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRectangle(TRectangle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCircle(TCircle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPoints(TPoints node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTShapes(TShapes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoorway(TDoorway node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWindow(TWindow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExit(TExit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStart(TStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNearstart(TNearstart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHalfway(THalfway node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNearend(TNearend node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnd(TEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMove(TMove node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
