/* This file was generated by SableCC (http://www.sablecc.org/). */

package MapLang.node;

import MapLang.analysis.*;

@SuppressWarnings("nls")
public final class AAstMultiCoordinate extends PAstMultiCoordinate
{
    private PAstCoordinate _astCoordinate_;
    private PAstMultiCoordinate _astMultiCoordinate_;

    public AAstMultiCoordinate()
    {
        // Constructor
    }

    public AAstMultiCoordinate(
        @SuppressWarnings("hiding") PAstCoordinate _astCoordinate_,
        @SuppressWarnings("hiding") PAstMultiCoordinate _astMultiCoordinate_)
    {
        // Constructor
        setAstCoordinate(_astCoordinate_);

        setAstMultiCoordinate(_astMultiCoordinate_);

    }

    @Override
    public Object clone()
    {
        return new AAstMultiCoordinate(
            cloneNode(this._astCoordinate_),
            cloneNode(this._astMultiCoordinate_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAstMultiCoordinate(this);
    }

    public PAstCoordinate getAstCoordinate()
    {
        return this._astCoordinate_;
    }

    public void setAstCoordinate(PAstCoordinate node)
    {
        if(this._astCoordinate_ != null)
        {
            this._astCoordinate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._astCoordinate_ = node;
    }

    public PAstMultiCoordinate getAstMultiCoordinate()
    {
        return this._astMultiCoordinate_;
    }

    public void setAstMultiCoordinate(PAstMultiCoordinate node)
    {
        if(this._astMultiCoordinate_ != null)
        {
            this._astMultiCoordinate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._astMultiCoordinate_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._astCoordinate_)
            + toString(this._astMultiCoordinate_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._astCoordinate_ == child)
        {
            this._astCoordinate_ = null;
            return;
        }

        if(this._astMultiCoordinate_ == child)
        {
            this._astMultiCoordinate_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._astCoordinate_ == oldChild)
        {
            setAstCoordinate((PAstCoordinate) newChild);
            return;
        }

        if(this._astMultiCoordinate_ == oldChild)
        {
            setAstMultiCoordinate((PAstMultiCoordinate) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
