/* This file was generated by SableCC (http://www.sablecc.org/). */

package MapLang.analysis;

import MapLang.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAInitProgramStart(AInitProgramStart node);
    void caseACreateMapProgramStart(ACreateMapProgramStart node);
    void caseACreatePointProgramStart(ACreatePointProgramStart node);
    void caseACreateTemplateProgramStart(ACreateTemplateProgramStart node);
    void caseACreateRoomProgramStart(ACreateRoomProgramStart node);
    void caseACreateRectangleOneProgramStart(ACreateRectangleOneProgramStart node);
    void caseACreateRectangleTwoProgramStart(ACreateRectangleTwoProgramStart node);
    void caseACreateCircleProgramStart(ACreateCircleProgramStart node);
    void caseACreateLineProgramStart(ACreateLineProgramStart node);
    void caseACopyPProgramStart(ACopyPProgramStart node);
    void caseACopyTProgramStart(ACopyTProgramStart node);
    void caseACopySProgramStart(ACopySProgramStart node);
    void caseAAddToRoomProgramStart(AAddToRoomProgramStart node);
    void caseAAddToShapeProgramStart(AAddToShapeProgramStart node);
    void caseAAddToTemplateProgramStart(AAddToTemplateProgramStart node);
    void caseAAddDoorwayPositionProgramStart(AAddDoorwayPositionProgramStart node);
    void caseAAddWindowPositionProgramStart(AAddWindowPositionProgramStart node);
    void caseAAddExitPositionProgramStart(AAddExitPositionProgramStart node);
    void caseAProgramStart(AProgramStart node);
    void caseACreateMap(ACreateMap node);
    void caseACreatePointCreatePoint(ACreatePointCreatePoint node);
    void caseACreatePointExtendedCreatePoint(ACreatePointExtendedCreatePoint node);
    void caseACreateTemplate(ACreateTemplate node);
    void caseACopyPoints(ACopyPoints node);
    void caseACopyTemplate(ACopyTemplate node);
    void caseACopyShapes(ACopyShapes node);
    void caseARelationExplicitAstRelation(ARelationExplicitAstRelation node);
    void caseARelationCoordinateAstRelation(ARelationCoordinateAstRelation node);
    void caseAERelationAstNullableRelation(AERelationAstNullableRelation node);
    void caseAERelationExplicitAstNullableRelation(AERelationExplicitAstNullableRelation node);
    void caseAERelationCoordinateAstNullableRelation(AERelationCoordinateAstNullableRelation node);
    void caseAAstRelationExplicit(AAstRelationExplicit node);
    void caseALeftDirAstDir(ALeftDirAstDir node);
    void caseARightDirAstDir(ARightDirAstDir node);
    void caseAUpDirAstDir(AUpDirAstDir node);
    void caseADownDirAstDir(ADownDirAstDir node);
    void caseAStartAstDis(AStartAstDis node);
    void caseANearStartAstDis(ANearStartAstDis node);
    void caseAHalfwayAstDis(AHalfwayAstDis node);
    void caseANearEndAstDis(ANearEndAstDis node);
    void caseAEndAstDis(AEndAstDis node);
    void caseADistanceAstPosition(ADistanceAstPosition node);
    void caseACoordinateAstPosition(ACoordinateAstPosition node);
    void caseAAstPreciseDir(AAstPreciseDir node);
    void caseAAstSecondPreciseDir(AAstSecondPreciseDir node);
    void caseAAstMultiId(AAstMultiId node);
    void caseAAstMultiCoordinate(AAstMultiCoordinate node);
    void caseAAddPointsToShapeTypeList(AAddPointsToShapeTypeList node);
    void caseAAddShapesToShapeTypeList(AAddShapesToShapeTypeList node);
    void caseAAddTemplateToShapeTypeList(AAddTemplateToShapeTypeList node);
    void caseAAddCoordinateToShapeTypeList(AAddCoordinateToShapeTypeList node);
    void caseAAddToRoomPointsRoomType(AAddToRoomPointsRoomType node);
    void caseAAddToRoomShapesRoomType(AAddToRoomShapesRoomType node);
    void caseAAddToRoomIdRoomType(AAddToRoomIdRoomType node);
    void caseAAddToRoomMultiCoordinateRoomType(AAddToRoomMultiCoordinateRoomType node);
    void caseAAstCoordinate(AAstCoordinate node);

    void caseTEol(TEol node);
    void caseTBlank(TBlank node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTLParen(TLParen node);
    void caseTRParen(TRParen node);
    void caseTSemicolon(TSemicolon node);
    void caseTEqual(TEqual node);
    void caseTComma(TComma node);
    void caseTInt(TInt node);
    void caseTCreate(TCreate node);
    void caseTMap(TMap node);
    void caseTPoint(TPoint node);
    void caseTFrom(TFrom node);
    void caseTTo(TTo node);
    void caseTAt(TAt node);
    void caseTBy(TBy node);
    void caseTRight(TRight node);
    void caseTLeft(TLeft node);
    void caseTUp(TUp node);
    void caseTDown(TDown node);
    void caseTAnd(TAnd node);
    void caseTFloat(TFloat node);
    void caseTCopy(TCopy node);
    void caseTAdd(TAdd node);
    void caseTRoom(TRoom node);
    void caseTTemplate(TTemplate node);
    void caseTTemplates(TTemplates node);
    void caseTShape(TShape node);
    void caseTLine(TLine node);
    void caseTCoordinates(TCoordinates node);
    void caseTIn(TIn node);
    void caseTFloor(TFloor node);
    void caseTRectangle(TRectangle node);
    void caseTCircle(TCircle node);
    void caseTPoints(TPoints node);
    void caseTShapes(TShapes node);
    void caseTDoorway(TDoorway node);
    void caseTWindow(TWindow node);
    void caseTExit(TExit node);
    void caseTStart(TStart node);
    void caseTNearstart(TNearstart node);
    void caseTHalfway(THalfway node);
    void caseTNearend(TNearend node);
    void caseTEnd(TEnd node);
    void caseTMove(TMove node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
