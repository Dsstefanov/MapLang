/* This file was generated by SableCC (http://www.sablecc.org/). */

package MapLang.node;

import MapLang.analysis.*;

@SuppressWarnings("nls")
public final class ACopyPProgramStart extends PProgramStart
{
    private PCopyPoints _copyPoints_;

    public ACopyPProgramStart()
    {
        // Constructor
    }

    public ACopyPProgramStart(
        @SuppressWarnings("hiding") PCopyPoints _copyPoints_)
    {
        // Constructor
        setCopyPoints(_copyPoints_);

    }

    @Override
    public Object clone()
    {
        return new ACopyPProgramStart(
            cloneNode(this._copyPoints_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACopyPProgramStart(this);
    }

    public PCopyPoints getCopyPoints()
    {
        return this._copyPoints_;
    }

    public void setCopyPoints(PCopyPoints node)
    {
        if(this._copyPoints_ != null)
        {
            this._copyPoints_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._copyPoints_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._copyPoints_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._copyPoints_ == child)
        {
            this._copyPoints_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._copyPoints_ == oldChild)
        {
            setCopyPoints((PCopyPoints) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
